/*
 * File: app/model/Player.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Coh2Ladder.model.Player', {
    extend: 'Ext.data.Model',

    uses: [
        'Coh2Ladder.model.Rank'
    ],

    statics: {
        getBannedSteamIds: function() {
            return [
            76561198016776720, // - BartonPL --done
            76561198012811763, // - VonIvan --done
            76561197980175112 // - BaoLiang --done
            ];
        }
    },

    config: {
        fields: [
            {
                name: 'id'
            },
            {
                mapping: 'alias',
                name: 'name',
                type: 'string'
            },
            {
                convert: function(v, rec) {
                    return (/^\/steam\/(.*)$/).exec(v)[1];
                },
                mapping: 'name',
                name: 'steam_id',
                type: 'string'
            },
            {
                mapping: 'name',
                name: 'steam_avatar_url',
                type: 'string'
            },
            {
                convert: function(v, rec) {
                    return 'http://steamcommunity.com/profiles/' + (/^\/steam\/(.*)$/).exec(v)[1];
                },
                mapping: 'name',
                name: 'steam_profile_url',
                type: 'string'
            },
            {
                convert: function(v, rec) {
                    return v % 100;
                },
                mapping: 'xp',
                name: 'level',
                type: 'int'
            },
            {
                mapping: 'xp',
                name: 'experience',
                type: 'int'
            }
        ],
        hasMany: {
            model: 'Coh2Ladder.model.Rank'
        },
        proxy: {
            type: 'memory',
            batchActions: false,
            reader: {
                type: 'json'
            }
        }
    },

    isBanned: function() {
        return Coh2Ladder.model.Player.getBannedSteamIds().indexOf(this.get('steam_id')) != -1;
    }

});