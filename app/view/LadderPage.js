/*
 * File: app/view/LadderPage.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Coh2Ladder.view.LadderPage', {
    extend: 'Ext.Container',
    alias: 'widget.ladderpage',

    requires: [
        'Coh2Ladder.view.LadderDataItem',
        'Ext.dataview.DataView'
    ],

    config: {
        gameModeId: 'gamemode-1v1',
        factionId: 'faction-germans',
        itemId: 'ladderPage1',
        layout: {
            type: 'fit'
        },
        items: [
            {
                xtype: 'dataview',
                itemId: 'dataView',
                scrollable: {
                    direction: 'vertical',
                    directionLock: true
                },
                disableSelection: true,
                defaultType: 'ladderdataitem',
                store: 'emptystore',
                useComponents: true
            }
        ]
    },

    initialize: function() {
        this.callParent();

        this.getComponent('dataView').setStore({
            model: 'Coh2Ladder.model.Rank',
            sorters: 'rank'
        });

        this.syncStore();
    },

    updateFactionId: function(newValue, oldValue) {
        if (this.initialized)
        this.syncStore();
    },

    updateGameModeId: function(newValue, oldValue) {
        if (this.initialized)
        this.syncStore();
    },

    syncStore: function() {
        var dataView = this.getComponent('dataView');
        var store = dataView.getStore();
        store.setFilters([
        {
            property: 'faction_id',
            value: this.getFactionId()
        },
        {
            property: 'gamemode_id',
            value: this.getGameModeId()
        }
        ]);

        store.load();

        //dataView.refresh();
        //debugger;
    }

});